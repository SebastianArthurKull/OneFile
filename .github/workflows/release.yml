name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*'           

env:
  BIN_NAME: OneFile   # this should be read from Cargo.toml. Will adjust this when i have time.

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_suffix: linux
            ext: ""
          - os: windows-latest
            artifact_suffix: windows
            ext: ".exe"
          - os: macos-latest
            artifact_suffix: macos
            ext: ""
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash          # ensures POSIX tools (cp, mkdir, etc.) even on Windows. Best lesson learned while writting actions.

    steps:
      - uses: actions/checkout@v3

      # one‑liner toolchain install + caching on every runner
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable 

      - name: Build release binary
        run: cargo build --release

      - name: Copy & rename for this OS
        run: |
          mkdir -p dist
          cp target/release/${BIN_NAME}${{ matrix.ext }} \
             dist/${BIN_NAME}-${{ matrix.artifact_suffix }}${{ matrix.ext }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BIN_NAME }}-${{ matrix.artifact_suffix }}
          path: dist/*
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write        # required by action-gh-release

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist

      - run: ls -R dist

      - name: Create GitHub release & upload binaries
        uses: softprops/action-gh-release@v1
        with:
          files: dist/**/
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
